# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# base things off the testing image without dependencies warmed up
FROM apache/cassandra-testing-ubuntu2004-java11
MAINTAINER Apache Cassandra <dev@cassandra.apache.org>

USER cassandra
ENV HOME /home/cassandra
WORKDIR /home/cassandra

# Fetch the maven dependencies in advance since this tends to fail at runtime
ARG CASSANDRA_GIT_URL=https://github.com/apache/cassandra.git
RUN git config --global http.postBuffer 524288000
RUN git clone ${CASSANDRA_GIT_URL} ~/cassandra

# 5+ requires java11
RUN sudo update-java-alternatives --set java-1.11.0-openjdk-$(dpkg --print-architecture)

RUN cd ~/cassandra && \
    ant resolver-dist-lib && \
    git checkout origin/cassandra-5.0 && ant resolver-dist-lib

# Initialize the CCM git repo as well as this also can fail to clone
RUN /bin/bash -c 'source ~/env3.6/bin/activate && \
    ccm create -n 1 -v git:trunk test && ccm remove test && \
    ccm create -n 1 -v git:cassandra-5.0 test && ccm remove test'

# <5 uses java8
RUN sudo update-java-alternatives --set java-1.8.0-openjdk-$(dpkg --print-architecture)

RUN cd ~/cassandra && \
    git checkout origin/cassandra-4.1 && ant resolver-dist-lib && \
    git checkout origin/cassandra-4.0 && ant resolver-dist-lib && \
    git checkout origin/cassandra-3.11 && ant resolver-dist-lib && \
    git checkout origin/cassandra-3.0 && ant resolver-dist-lib && \
    git checkout origin/cassandra-2.2 && ant maven-ant-tasks-retrieve-build && \
    git checkout origin/cassandra-2.1 && ant maven-ant-tasks-retrieve-build

# Initialize the CCM git repo as well as this also can fail to clone
RUN /bin/bash -c 'source ~/env3.6/bin/activate && \
    ccm create -n 1 -v git:cassandra-4.1 test && ccm remove test && \
    ccm create -n 1 -v git:cassandra-4.0 test && ccm remove test && \
    ccm create -n 1 -v git:cassandra-3.11 test && ccm remove test && \
    ccm create -n 1 -v git:cassandra-3.0 test && ccm remove test && \
    ccm create -n 1 -v git:cassandra-2.2 test && ccm remove test && \
    ccm create -n 1 -v git:cassandra-2.1 test && ccm remove test'

RUN rm -fr ~/cassandra

# Initialize ccm versions.  right side of each sequence needs to be updated with new releases.
#  this can be checked with:
#  `curl -s https://downloads.apache.org/cassandra/ | grep -oP '(?<=href=\")[0-9]+\.[0-9]+\.[0-9]+(?=)' | sort -V | uniq -w 3`
RUN bash -c 'source ~/env3.6/bin/activate && \
    for i in {1..22} ; do echo $i ; ccm create --quiet -n 1 -v binary:2.1.$i test && ccm remove test ; done && \
    for i in {1..19} ; do echo $i ; ccm create --quiet -n 1 -v binary:2.2.$i test && ccm remove test ; done && \
    for i in {1..29} ; do echo $i ; ccm create --quiet -n 1 -v binary:3.0.$i test && ccm remove test ; done && \
    for i in {1..15} ; do echo $i ; ccm create --quiet -n 1 -v binary:3.11.$i test && ccm remove test ; done && \
    for i in {1..11} ; do echo $i ; ccm create --quiet -n 1 -v binary:4.0.$i test && ccm remove test ; done && \
    for i in {1..3}  ; do echo $i ; ccm create --quiet -n 1 -v binary:4.1.$i test && ccm remove test ; done'

